<Application x:Class="Application"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:LabAssistantApp"
ShutdownMode="OnMainWindowClose">
    <Application.Resources>
        <FontFamily x:Key="NevisFont">/LabAssistantApp;component/#nevis</FontFamily>
        <FontFamily x:Key="TelegraficoFont">/LabAssistantApp;component/#Telegrafico</FontFamily>
        <FontFamily x:Key="ArialMTFont">/LabAssistantApp;component/#Arial MT</FontFamily>
        <FontFamily x:Key="GadugiFont">/LabAssistantApp;component/#Gadugi</FontFamily>

        <PathGeometry x:Key="logoGeometry">
            <PathFigure StartPoint="0.35,0" IsClosed="True">
                <PathFigure.Segments>
                    <LineSegment Point="0.65,0"/>
                    <LineSegment Point="0.65,0.5"/>
                    <LineSegment Point="1,1"/>
                    <LineSegment Point="0,1"/>
                    <LineSegment Point="0.35,0.5"/>
                </PathFigure.Segments>
            </PathFigure>
        </PathGeometry>
        <Color x:Key="labBlueColor" A="255" G="162" B="255"/>
        <SolidColorBrush x:Key="labBlueBrush" Color="{DynamicResource labBlueColor}"/>

        <DrawingBrush x:Key="LogoBrush_Hollow">
            <DrawingBrush.Drawing>
                <GeometryDrawing Brush="Transparent" Geometry="{DynamicResource logoGeometry}">
                    <GeometryDrawing.Pen>
                        <Pen Brush="White" Thickness="0.04"/>
                    </GeometryDrawing.Pen>
                </GeometryDrawing>
            </DrawingBrush.Drawing>
        </DrawingBrush>

        <DrawingBrush x:Key="LogoBrush_Full" Stretch="Fill">
            <DrawingBrush.Drawing>
                <GeometryDrawing Brush="White" Geometry="{DynamicResource logoGeometry}"/>
            </DrawingBrush.Drawing>
        </DrawingBrush>
        
        <PathSegmentCollection x:Key="crossPath">
            <LineSegment Point="0.5,0.35"/>
            <LineSegment Point="0.85,0"/>
            <LineSegment Point="1,0.15"/>
            <LineSegment Point="0.65,0.5"/>
            <LineSegment Point="1,0.85"/>
            <LineSegment Point="0.85,1"/>
            <LineSegment Point="0.5,0.65"/>
            <LineSegment Point="0.15,1"/>
            <LineSegment Point="0,0.85"/>
            <LineSegment Point="0.35,0.5"/>
            <LineSegment Point="0,0.15"/>
        </PathSegmentCollection>

        <DrawingBrush x:Key="cross_Full" Stretch="Fill">
            <DrawingBrush.Drawing>
                <GeometryDrawing Brush="White">
                    <GeometryDrawing.Geometry>
                        <PathGeometry>
                            <PathFigure IsClosed="True" StartPoint="0.15,0" Segments="{DynamicResource crossPath}"/>
                        </PathGeometry>
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>
            </DrawingBrush.Drawing>
        </DrawingBrush>

        <DrawingBrush x:Key="max_Full" Stretch="Fill">
            <DrawingBrush.Drawing>
                <GeometryDrawing Brush="White">
                    <GeometryDrawing.Pen>
                        <Pen Brush="White" Thickness="0.1"/>
                    </GeometryDrawing.Pen>
                    <GeometryDrawing.Geometry>
                        <PathGeometry>
                            <PathFigureCollection>
                                <PathFigure IsClosed="True" IsFilled="True" StartPoint="0,0">
                                    <PathFigure.Segments>
                                        <LineSegment Point="1,0"/>
                                        <LineSegment Point="1,0.15"/>
                                        <LineSegment Point="0,0.15"/>
                                    </PathFigure.Segments>
                                </PathFigure>
                                <PathFigure IsClosed="True" IsFilled="False" StartPoint="0,0">
                                    <PathFigure.Segments>
                                        <LineSegment Point="1,0"/>
                                        <LineSegment Point="1,1"/>
                                        <LineSegment Point="0,1"/>
                                    </PathFigure.Segments>
                                </PathFigure>
                            </PathFigureCollection>
                        </PathGeometry>
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>
            </DrawingBrush.Drawing>
        </DrawingBrush>

        <DrawingBrush x:Key="min_Full" Stretch="Uniform" AlignmentY="Bottom">
            <DrawingBrush.Drawing>
                <GeometryDrawing Brush="White">
                    <GeometryDrawing.Geometry>
                        <PathGeometry>
                            <PathFigure IsClosed="True" IsFilled="True" StartPoint="0,0.85">
                                <PathFigure.Segments>
                                    <LineSegment Point="1,0.85"/>
                                    <LineSegment Point="1,1"/>
                                    <LineSegment Point="0,1"/>
                                </PathFigure.Segments>
                            </PathFigure>
                        </PathGeometry>
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>
            </DrawingBrush.Drawing>
        </DrawingBrush>

        <DrawingBrush x:Key="tick" Stretch="Uniform">
            <DrawingBrush.Drawing>
                <GeometryDrawing>
                    <GeometryDrawing.Pen>
                        <Pen Brush="White" Thickness="0.2" EndLineCap="Round" StartLineCap="Round"/>
                    </GeometryDrawing.Pen>
                    <GeometryDrawing.Geometry>
                        <PathGeometry>
                            <PathFigure IsClosed="False" IsFilled="False" StartPoint="0,0.6">
                                <PathFigure.Segments>
                                    <LineSegment Point="0.3,1"/>
                                    <LineSegment Point="1,0"/>
                                </PathFigure.Segments>
                            </PathFigure>
                        </PathGeometry>
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>
            </DrawingBrush.Drawing>
        </DrawingBrush>
        
        <VisualBrush x:Key="infinity" Stretch="Uniform">
            <VisualBrush.Visual>
                <TextBlock Text="&#x221E;" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center"/>
            </VisualBrush.Visual>
        </VisualBrush>

        <Style TargetType="ContextMenu">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Background" Value="#B2000000"/>
            <Setter Property="BorderBrush" Value="Yellow"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ContextMenu">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <StackPanel ClipToBounds="True" Orientation="Vertical" IsItemsHost="True"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="Separator">
            <Setter Property="Height" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Separator">
                        <Border BorderBrush="{StaticResource SolidBorderBrush}" BorderThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- TopLevelHeader -->
        <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}" TargetType="MenuItem">
            <Border Name="Border">
                <Grid>
                    <ContentPresenter Margin="6,3,6,3" ContentSource="Header" RecognizesAccessKey="True"/>
                    <Popup Name="Popup" Placement="Bottom"
        IsOpen="{TemplateBinding IsSubmenuOpen}"
        AllowsTransparency="True" 
        Focusable="False"
        PopupAnimation="Fade">
                        <Border Name="SubmenuBorder" SnapsToDevicePixels="True"
          Background="Red"
          BorderBrush="Yellow"
          BorderThickness="1" >
                            <StackPanel  
            IsItemsHost="True" 
            KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </Border>
                    </Popup>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                    <Setter TargetName="Popup" Property="PopupAnimation" Value="None"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="true">
                    <Setter TargetName="Border" Property="Background"
              Value="Blue"/>
                    <Setter TargetName="Border" Property="BorderBrush"
              Value="Transparent"/>
                </Trigger>
                <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                    <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="0,0,4,4"/>
                    <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,0,0,3"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        
        <!-- TopLevelItem -->
        <ControlTemplate 
  x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}" 
  TargetType="MenuItem">
            <Border Name="Border" >
                <Grid>
                    <ContentPresenter 
        Margin="6,3,6,3" 
        ContentSource="Header"
        RecognizesAccessKey="True" />
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsHighlighted" Value="true">
                    <Setter TargetName="Border" Property="Background"
              Value="Blue"/>
                    <Setter TargetName="Border" Property="BorderBrush" Value="Transparent"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground"
              Value="Black"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!-- SubmenuItem -->
        <ControlTemplate 
  x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" 
  TargetType="MenuItem">
            <Border Name="Border" >
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                        <ColumnDefinition Width="13"/>
                    </Grid.ColumnDefinitions>
                    <ContentPresenter 
        Name="Icon"
        VerticalAlignment="Center"
        ContentSource="Icon" Margin="4,4,6,4"/>
                    <Border 
        Name="Check"  
        Width="13" Height="13" 
        Visibility="Collapsed"
        Margin="6,0,6,0" 
        Background="Green"
        BorderThickness="1"
        BorderBrush="ForestGreen">
                        <Path 
          Name="CheckMark"
          Width="7" Height="7" 
          Visibility="Hidden" 
          SnapsToDevicePixels="False" 
          Stroke="White"
          StrokeThickness="2"
          Data="M 0 0 L 7 7 M 0 7 L 7 0" />
                    </Border>
                    <ContentPresenter 
        Name="HeaderHost"
        Grid.Column="1"
        ContentSource="Header"
        RecognizesAccessKey="True"/>
                    <TextBlock x:Name="InputGestureText"
        Grid.Column="2"
        Text="{TemplateBinding InputGestureText}"
        Margin="5,2,0,2"
        DockPanel.Dock="Right" />
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="true">
                    <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                </Trigger>
                <Trigger Property="IsCheckable" Value="true">
                    <Setter TargetName="Check" Property="Visibility" Value="Visible"/>
                    <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="#44FFFFFF"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!-- SubmenuHeader -->
        <ControlTemplate 
  x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" 
  TargetType="MenuItem">
            <Border Name="Border" >
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                        <ColumnDefinition Width="13"/>
                    </Grid.ColumnDefinitions>
                    <ContentPresenter 
        Name="Icon"
        Margin="6,0,6,0"
        VerticalAlignment="Center"
        ContentSource="Icon"/>
                    <ContentPresenter 
        Name="HeaderHost"
        Grid.Column="1"
        ContentSource="Header"
        RecognizesAccessKey="True"/>
                    <TextBlock x:Name="InputGestureText"
        Grid.Column="2"
        Text="{TemplateBinding InputGestureText}"
        Margin="5,2,2,2"
        DockPanel.Dock="Right"/>
                    <Path 
        Grid.Column="3"
        HorizontalAlignment="Center"
        VerticalAlignment="Center"
        Data="M 0 0 L 0 7 L 4 3.5 Z" 
        Fill="White" />
                    <Popup 
        Name="Popup"
        Placement="Right"
        HorizontalOffset="-4" 
        IsOpen="{TemplateBinding IsSubmenuOpen}"
        AllowsTransparency="True" 
        Focusable="False"
        PopupAnimation="Fade">
                        <Border 
          Name="SubmenuBorder"
          SnapsToDevicePixels="True"
          Background="Yellow"
          BorderBrush="Orange"
          BorderThickness="1" >
                            <StackPanel  
            IsItemsHost="True" 
            KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </Border>
                    </Popup>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="true">
                    <Setter TargetName="Border" Property="Background"
              Value="Blue"/>
                </Trigger>
                <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                    <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="4"/>
                    <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,3,0,3"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!-- MenuItem Style -->
        <Style x:Key="{x:Type MenuItem}" TargetType="MenuItem">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Style.Triggers>
                <Trigger Property="Role" Value="TopLevelHeader">
                    <Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}"/>
                    <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
                </Trigger>
                <Trigger Property="Role" Value="TopLevelItem">
                    <Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}"/>
                </Trigger>
                <Trigger Property="Role" Value="SubmenuHeader">
                    <Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}"/>
                </Trigger>
                <Trigger Property="Role" Value="SubmenuItem">
                    <Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="LabAssistantWindowStyle" TargetType="Window">
            <Style.Resources>
                <SolidColorBrush x:Key="labBorder" Color="#FF2E2E2E"/>
                <Style x:Key="toolbarButton" TargetType="{x:Type Button}">
                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="Width" Value="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource Self}}"/>
                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                    <Setter Property="Opacity" Value="0.4"/>
                    <Setter Property="Effect">
                        <Setter.Value>
                            <DropShadowEffect BlurRadius="5" ShadowDepth="0"/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Grid x:Name="buttonBase" Background="Transparent">
                                    <Rectangle Fill="{TemplateBinding Background}" OpacityMask="{TemplateBinding OpacityMask}"/>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <Style x:Key="borderWidgetStyle" TargetType="{x:Type Border}">
                    <Setter Property="BorderBrush" Value="{StaticResource labBlueBrush}"/>
                    <Setter Property="Grid.Row" Value="1"/>
                </Style>
            </Style.Resources>
            <Setter Property="BorderBrush" Value="{StaticResource labBorder}"/>
            <Setter Property="WindowStyle" Value="None"/>
            <Setter Property="ResizeMode" Value="NoResize"/>
            <Setter Property="FontFamily" Value="{StaticResource GadugiFont}"/>
            <Setter Property="MaxHeight" Value="{Binding Source={x:Static SystemParameters.WorkArea}, Path=Height}"/>
            <Setter Property="MaxWidth" Value="{Binding Source={x:Static SystemParameters.WorkArea}, Path=Width}"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Background" Value="#FF383838"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Window">
                        <Border x:Name="windowBorder" BorderBrush="{DynamicResource labBlueBrush}" BorderThickness="1">
                            <Grid x:Name="contentGrid" Background="{TemplateBinding Background}">
                                <Grid.RowDefinitions>
                                    <RowDefinition MaxHeight="31" MinHeight="31"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Grid x:Name="topBorder" Margin="0" Background="{TemplateBinding BorderBrush}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="3"/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="3"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="1*"/>
                                        <RowDefinition Height="6*"/>
                                        <RowDefinition Height="1*"/>
                                    </Grid.RowDefinitions>
                                    <StackPanel Grid.Column="1" HorizontalAlignment="Left" Grid.Row="1" Orientation="Horizontal">
                                        <Canvas HorizontalAlignment="Left" Width="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource Self}}" Background="{DynamicResource LogoBrush_Hollow}"/>
                                        <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="{Binding Title, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Foreground="#FFE2E2E2" Padding="7,0,0,0" TextOptions.TextFormattingMode="Display" TextOptions.TextHintingMode="Fixed" VerticalAlignment="Center"/>
                                    </StackPanel>
                                    <StackPanel Grid.Column="1" HorizontalAlignment="Right" Grid.Row="1" Orientation="Horizontal" FlowDirection="RightToLeft">
                                        <Button x:Name="exitBtn" Background="White" OpacityMask="{DynamicResource cross_Full}" Style="{DynamicResource toolbarButton}"/>
                                        <Button x:Name="maxBtn" Background="White" Style="{DynamicResource toolbarButton}" OpacityMask="{DynamicResource max_Full}" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Right" Margin="10,0,0,0">
                                            <Button.RenderTransform>
                                                <TransformGroup>
                                                    <ScaleTransform ScaleX="0.7" ScaleY="0.7"/>
                                                    <SkewTransform/>
                                                    <RotateTransform/>
                                                    <TranslateTransform/>
                                                </TransformGroup>
                                            </Button.RenderTransform>
                                        </Button>
                                        <Button x:Name="minBtn" Background="White" Style="{DynamicResource toolbarButton}" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Right" Margin="10,0,0,0" OpacityMask="{DynamicResource min_Full}">
                                            <Button.RenderTransform>
                                                <TransformGroup>
                                                    <ScaleTransform ScaleX="0.7" ScaleY="0.7"/>
                                                    <SkewTransform/>
                                                    <RotateTransform/>
                                                    <TranslateTransform/>
                                                </TransformGroup>
                                            </Button.RenderTransform>
                                        </Button>
                                    </StackPanel>
                                </Grid>
                                <Border x:Name="contentBorder" BorderBrush="{DynamicResource labBorder}" BorderThickness="3,0,3,3" Grid.Row="1">
                                    <ContentPresenter/>
                                </Border>
                                <Border x:Name="midLeftBorder" Style="{DynamicResource borderWidgetStyle}" BorderThickness="3,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left" Height="50" Cursor="SizeWE"/>
                                <Border x:Name="lowLeftBorder" Style="{DynamicResource borderWidgetStyle}" BorderThickness="3,0,0,3" VerticalAlignment="Bottom" HorizontalAlignment="Left" Height="25" Width="25" Cursor="SizeNESW"/>
                                <Border x:Name="midBottomBorder" Style="{DynamicResource borderWidgetStyle}" BorderThickness="0,0,0,3" VerticalAlignment="Bottom" HorizontalAlignment="Center" Width="50" Cursor="SizeNS"/>
                                <Border x:Name="lowRightBorder" Style="{DynamicResource borderWidgetStyle}" BorderThickness="0,0,3,3" VerticalAlignment="Bottom" HorizontalAlignment="Right" Height="25" Width="25" Cursor="SizeNWSE"/>
                                <Border x:Name="midRightBorder" Style="{DynamicResource borderWidgetStyle}" BorderThickness="0,0,3,0" VerticalAlignment="Center" HorizontalAlignment="Right" Height="50" Cursor="SizeWE"/>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="labScrollBar" TargetType="{x:Type ScrollBar}">
            <Style.Resources>
                <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
                    <Setter Property="OverridesDefaultStyle" Value="true"/>
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Focusable" Value="false"/>
                    <Setter Property="IsTabStop" Value="false"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <Style x:Key="MyThumb" TargetType="{x:Type Thumb}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Thumb}">
                                <Grid x:Name="thumbGrid" Background="{TemplateBinding Background}">
                                    <Rectangle x:Name="thumbRect"/>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="thumbRect" Property="Fill" Value="#77FFFFFF"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <SolidColorBrush x:Key="defaultScrollBarBackground" Color="#7F000000"/>
                <SolidColorBrush x:Key="defaultScrollBarForeground" Color="#7FFFFFFF"/>
                
            </Style.Resources>
            <Setter Property="Background" Value="{StaticResource defaultScrollBarBackground}"/>
            <Setter Property="Foreground" Value="{StaticResource defaultScrollBarForeground}"/>
            <Setter Property="Width" Value="10"/>
            <Setter Property="MinWidth" Value="10"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="Bg" SnapsToDevicePixels="true" Background="{TemplateBinding Background}">
                            <Track x:Name="PART_Track" IsDirectionReversed="True" IsEnabled="{TemplateBinding IsMouseOver}">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource ScrollBarPageButton}"/>
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource ScrollBarPageButton}"/>
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Style="{DynamicResource MyThumb}" Width="8" Margin="0,1" Background="{TemplateBinding Foreground}"/>
                                </Track.Thumb>
                            </Track>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto"/>
                    <Setter Property="Height" Value="10"/>
                    <Setter Property="MinHeight" Value="10"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                <Grid x:Name="Bg" SnapsToDevicePixels="true" Background="{TemplateBinding Background}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="0.00001*"/>
                                    </Grid.ColumnDefinitions>
                                    <Track x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding IsMouseOver}">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource ScrollBarPageButton}"/>
                                        </Track.DecreaseRepeatButton>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource ScrollBarPageButton}"/>
                                        </Track.IncreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb Style="{DynamicResource MyThumb}" Height="8" Margin="1,0" Background="{TemplateBinding Foreground}"/>
                                        </Track.Thumb>
                                    </Track>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="labScrollViewerStyle" TargetType="ScrollViewer">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <ControlTemplate.Resources>
                            <Style TargetType="{x:Type ScrollBar}" BasedOn="{StaticResource labScrollBar}"/>
                        </ControlTemplate.Resources>
                        <Grid Background="{TemplateBinding Background}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.RowSpan="2" Margin="{TemplateBinding Padding}" Grid.ColumnSpan="2"/>
                            <ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Width="8"/>
                            <ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" Height="8"/>
                            <Rectangle x:Name="Corner" Grid.Column="1" Fill="{DynamicResource defaultScrollBarBackground}" Grid.Row="1"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ContextMenu x:Key="labMenu">
            <ContextMenu.Resources>
                <local:MenuVisibilityConverter x:Key="visConverter"/>
                <Style TargetType="{x:Type MenuItem}">
                    <Setter Property="CommandParameter" Value="{Binding RelativeSource={RelativeSource Self}, Path=Parent}"/>
                    <EventSetter Event="Click" Handler="handleMenuClick"/>
                </Style>
            </ContextMenu.Resources>
            <MenuItem x:Name="addToLab" Header="Add to laboratory" Icon="{DynamicResource addImage}"/>
            <MenuItem x:Name="removeFromLab" Header="Remove from laboratory" Icon="{DynamicResource removeImage}"/>
            <MenuItem x:Name="info" Header="Properties" Icon="{DynamicResource infoImage}"/>
        </ContextMenu>
        
        <Style x:Key="labGrid" TargetType="DataGrid">
            <Style.Resources>
                <Style TargetType="{x:Type ScrollBar}" BasedOn="{StaticResource labScrollBar}"/>
                <SolidColorBrush x:Key="rowSelected" Color="#FF00AEFF"/>
                <SolidColorBrush x:Key="rowSelectedForeground" Color="White"/>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="{Binding Color, Source={StaticResource rowSelected}}"/>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="{Binding Color, Source={StaticResource rowSelectedForeground}}"/>
                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="{Binding Color, Source={StaticResource rowSelected}}"/>
                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}" Color="{Binding Color, Source={StaticResource rowSelectedForeground}}"/>
            </Style.Resources>
            <Setter Property="Foreground" Value="#FFE4E4E4"/>
            <Setter Property="SelectionUnit" Value="FullRow"/>
            <Setter Property="AutoGenerateColumns" Value="False"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="ColumnHeaderHeight" Value="30"/>
            <Setter Property="HeadersVisibility" Value="Column"/>
            <Setter Property="CanUserResizeRows" Value="False"/>
            <Setter Property="CanUserDeleteRows" Value="False"/>
            <Setter Property="CanUserAddRows" Value="False"/>
            <Setter Property="RowBackground" Value="#FF383838"/>
            <Setter Property="AlternatingRowBackground" Value="#FF474747"/>
            <Setter Property="RowDetailsVisibilityMode" Value="Collapsed"/>
            <Setter Property="SelectionMode" Value="Single"/>
            <Setter Property="RowStyle">
                <Setter.Value>
                    <Style TargetType="DataGridRow">
                        <Setter Property="ContextMenu" Value="{StaticResource labMenu}"/>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="CellStyle">
                <Setter.Value>
                    <Style TargetType="{x:Type DataGridCell}">
                        <Setter Property="Padding" Value="5,0"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="Focusable" Value="False"/>
                        <Setter Property="IsTabStop" Value="False"/>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="ColumnHeaderStyle">
                <Setter.Value>
                    <Style TargetType="{x:Type DataGridColumnHeader}">
                        <Setter Property="Background">
                            <Setter.Value>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFB0B0B0" Offset="1"/>
                                    <GradientStop Color="#FFCBCBCB" Offset="0"/>
                                </LinearGradientBrush>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="BorderBrush" Value="Black"/>
                        <Setter Property="BorderThickness" Value="0,0,1,0"/>
                        <Setter Property="Foreground" Value="#FF1D1D1D"/>
                        <Setter Property="Padding" Value="5,0"/>
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>
        
    </Application.Resources>
</Application>
